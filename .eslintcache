[{"C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\index.js":"1","C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\reportWebVitals.js":"2","C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\components\\App.js":"3","C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\components\\Movie.js":"4","C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\components\\Pagination.js":"5","C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\App.js":"6"},{"size":517,"mtime":1608563218507,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1968,"mtime":1608563084348,"results":"10","hashOfConfig":"8"},{"size":869,"mtime":1608563084356,"results":"11","hashOfConfig":"8"},{"size":944,"mtime":1608563084402,"results":"12","hashOfConfig":"8"},{"size":553,"mtime":1608563218404,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1im91sj",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\index.js",[],"C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\reportWebVitals.js",[],["29","30"],"C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\components\\App.js",[],"C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\components\\Movie.js",["31","32","33"],"import React from 'react';\r\n\r\nconst Movie = (props) => {\r\n    return (\r\n        <div className=\"col s12 m6 l3\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image waves-effect waves-block waves-light\">\r\n                    { props.image == null ? <img className=\"\" src={`https://s3-ap-southeast-1.amazonaws.com/upcode/static/default-image.jpg`} alt=\"Card image cap\" style={{ width: \"100%\",\r\n                        height: 360}}/> : <img className=\"\" src={`http://image.tmdb.org/t/p/w185${props.image}`} alt=\"Card image cap\" style={{ width: \"100%\",\r\n                        height: 360}} />}\r\n                    </div>\r\n                <div className=\"card-content\">\r\n                    <p><a href=\"#\">Voir les détails du film</a></p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\components\\Pagination.js",["34","35"],"import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n    let pageLinks = []\r\n\r\n    for(let i = 1; i <= props.pages + 1; i++ ) {\r\n        let active = props.currentPage === i ? 'active' : '';\r\n        pageLinks.push(<li className={`waves-effect ${active}`} key={i} onClick={() => props.nextPage(i)}><a href=\"#!\">{i}</a></li>)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <ul className=\"pagination\">\r\n                    { props.currentPage > 1 ? <li className=\"waves-effect\" onClick={() => props.nextPage(props.currentPage - 1)}><a href=\"#\">Prev</a></li> : ''}\r\n                    {  pageLinks }\r\n                    { props.currentPage < props.pages + 1 ? <li className=\"waves-effect\" onClick={() => props.nextPage(props.currentPage + 1)}><a href=\"#\">Next</a></li> : ''}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","C:\\Users\\elias\\PhpstormProjects\\cinetech\\src\\App.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":8,"column":45,"nodeType":"42","endLine":9,"endColumn":40},{"ruleId":"40","severity":1,"message":"41","line":9,"column":43,"nodeType":"42","endLine":10,"endColumn":41},{"ruleId":"43","severity":1,"message":"44","line":13,"column":24,"nodeType":"42","endLine":13,"endColumn":36},{"ruleId":"43","severity":1,"message":"44","line":14,"column":130,"nodeType":"42","endLine":14,"endColumn":142},{"ruleId":"43","severity":1,"message":"44","line":16,"column":144,"nodeType":"42","endLine":16,"endColumn":156},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]